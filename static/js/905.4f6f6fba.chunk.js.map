{"version":3,"file":"static/js/905.4f6f6fba.chunk.js","mappings":"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","sources":["views/widgets/WidgetsDropdown.js","views/dashboard/Dashboard.js"],"sourcesContent":["import React from 'react'\nimport {\n  CRow,\n  CCol,\n  // CDropdown,\n  // CDropdownMenu,\n  // CDropdownItem,\n  // CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\n// import CIcon from '@coreui/icons-react'\n// import { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = () => {\n  return (\n    <CRow className=\"d-flex justify-content-between\">\n      <CCol style={{ width: '33.33%' }} sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            \n             12\n             \n           \n          }\n          title=\"Your Total Entries\"\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol style={{ width: '33.33%' }} sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            10\n          }\n          title=\"Your Sugar Entries\"\n          \n          \n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      {/* <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              2.49{' '}\n              <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Conversion Rate\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol> */}\n      <CCol style={{ width: '33.33%' }} sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            \n              16\n          \n          }\n          title=\"Your Exercise Days\"\n         \n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","import React from 'react'\n\nimport {\n  // CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  // cibCcAmex,\n  // cibCcApplePay,\n  // cibCcMastercard,\n  // cibCcPaypal,\n  // cibCcStripe,\n  // cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  // cifBr,\n  // cifEs,\n  // cifFr,\n  // cifIn,\n  // cifPl,\n  // cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  // cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\n// import avatar1 from 'src/assets/images/avatars/1.jpg'\n// import avatar2 from 'src/assets/images/avatars/2.jpg'\n// import avatar3 from 'src/assets/images/avatars/3.jpg'\n// import avatar4 from 'src/assets/images/avatars/4.jpg'\n// import avatar5 from 'src/assets/images/avatars/5.jpg'\n// import avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\n\nconst Dashboard = () => {\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  // const tableExample = [\n  //   {\n  //     avatar: { src: avatar1, status: 'success' },\n  //     user: {\n  //       name: 'Yiorgos Avraamu',\n  //       new: true,\n  //       registered: 'Jan 1, 2021',\n  //     },\n  //     country: { name: 'USA', flag: cifUs },\n  //     usage: {\n  //       value: 50,\n  //       period: 'Jun 11, 2021 - Jul 10, 2021',\n  //       color: 'success',\n  //     },\n  //     payment: { name: 'Mastercard', icon: cibCcMastercard },\n  //     activity: '10 sec ago',\n  //   },\n  //   {\n  //     avatar: { src: avatar2, status: 'danger' },\n  //     user: {\n  //       name: 'Avram Tarasios',\n  //       new: false,\n  //       registered: 'Jan 1, 2021',\n  //     },\n  //     country: { name: 'Brazil', flag: cifBr },\n  //     usage: {\n  //       value: 22,\n  //       period: 'Jun 11, 2021 - Jul 10, 2021',\n  //       color: 'info',\n  //     },\n  //     payment: { name: 'Visa', icon: cibCcVisa },\n  //     activity: '5 minutes ago',\n  //   },\n  //   {\n  //     avatar: { src: avatar3, status: 'warning' },\n  //     user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\n  //     country: { name: 'India', flag: cifIn },\n  //     usage: {\n  //       value: 74,\n  //       period: 'Jun 11, 2021 - Jul 10, 2021',\n  //       color: 'warning',\n  //     },\n  //     payment: { name: 'Stripe', icon: cibCcStripe },\n  //     activity: '1 hour ago',\n  //   },\n  //   {\n  //     avatar: { src: avatar4, status: 'secondary' },\n  //     user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\n  //     country: { name: 'France', flag: cifFr },\n  //     usage: {\n  //       value: 98,\n  //       period: 'Jun 11, 2021 - Jul 10, 2021',\n  //       color: 'danger',\n  //     },\n  //     payment: { name: 'PayPal', icon: cibCcPaypal },\n  //     activity: 'Last month',\n  //   },\n  //   {\n  //     avatar: { src: avatar5, status: 'success' },\n  //     user: {\n  //       name: 'Agapetus Tadeáš',\n  //       new: true,\n  //       registered: 'Jan 1, 2021',\n  //     },\n  //     country: { name: 'Spain', flag: cifEs },\n  //     usage: {\n  //       value: 22,\n  //       period: 'Jun 11, 2021 - Jul 10, 2021',\n  //       color: 'primary',\n  //     },\n  //     payment: { name: 'Google Wallet', icon: cibCcApplePay },\n  //     activity: 'Last week',\n  //   },\n  //   {\n  //     avatar: { src: avatar6, status: 'danger' },\n  //     user: {\n  //       name: 'Friderik Dávid',\n  //       new: true,\n  //       registered: 'Jan 1, 2021',\n  //     },\n  //     country: { name: 'Poland', flag: cifPl },\n  //     usage: {\n  //       value: 43,\n  //       period: 'Jun 11, 2021 - Jul 10, 2021',\n  //       color: 'success',\n  //     },\n  //     payment: { name: 'Amex', icon: cibCcAmex },\n  //     activity: 'Last week',\n  //   },\n  // ]\n\n  const userTable = [\n    {\n      id: 1,\n      sugarLevel: 100,\n      weight: `${60} kg`,\n      morMeal: 'Tea with Donaut',\n      launch: 'Pizza',\n      Dinner: 'Rice and Dal',\n      exercise: `${20} min`,\n    },\n    {\n      id: 2,\n      sugarLevel: 100,\n      weight: `${60} kg`,\n      morMeal: 'Tea with Donaut',\n      launch: 'Pizza',\n      Dinner: 'Rice and Dal',\n      exercise: `${20} min`,\n    },\n    {\n      id: 3,\n      sugarLevel: 100,\n      weight: `${60} kg`,\n      morMeal: 'Tea with Donaut',\n      launch: 'Pizza',\n      Dinner: 'Rice and Dal',\n      exercise: `${20} min`,\n    },\n    {\n      id: 4,\n      sugarLevel: 100,\n      weight: `${60} kg`,\n      morMeal: 'Tea with Donaut',\n      launch: 'Pizza',\n      Dinner: 'Rice and Dal',\n      exercise: `${20} min`,\n    },\n    {\n      id: 5,\n      sugarLevel: 100,\n      weight: `${60} kg`,\n      morMeal: 'Tea with Donaut',\n      launch: 'Pizza',\n      Dinner: 'Rice and Dal',\n      exercise: `${20} min`,\n    },\n    {\n      id: 6,\n      sugarLevel: 100,\n      weight: `${60} kg`,\n      morMeal: 'Tea with Donaut',\n      launch: 'Pizza',\n      Dinner: 'Rice and Dal',\n      exercise: `${20} min`,\n    },\n    {\n      id: 7,\n      sugarLevel: 100,\n      weight: `${60} kg`,\n      morMeal: 'Tea with Donaut',\n      launch: 'Pizza',\n      Dinner: 'Rice and Dal',\n      exercise: `${20} min`,\n    },\n    {\n      id: 8,\n      sugarLevel: 100,\n      weight: `${60} kg`,\n      morMeal: 'Tea with Donaut',\n      launch: 'Pizza',\n      Dinner: 'Rice and Dal',\n      exercise: `${20} min`,\n    },\n    {\n      id: 9,\n      sugarLevel: 100,\n      weight: `${60} kg`,\n      morMeal: 'Tea with Donaut',\n      launch: 'Pizza',\n      Dinner: 'Rice and Dal',\n      exercise: `${20} min`,\n    },\n    {\n      id: 10,\n      sugarLevel: 100,\n      weight: `${60} kg`,\n      morMeal: 'Tea with Donaut',\n      launch: 'Pizza',\n      Dinner: 'Rice and Dal',\n      exercise: `${20} min`,\n    }\n  ]\n\n  return (\n    <>\n      <WidgetsDropdown />\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n   Food Analysis\n              </h4>\n              <div className=\"small text-medium-emphasis\">June - July 2022</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n              datasets: [\n                {\n                  label: 'My First dataset',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                  fill: true,\n                },\n                {\n                  label: 'My Second dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                },\n                {\n                  label: 'My Third dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-danger'),\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\n                  borderWidth: 1,\n                  borderDash: [8, 5],\n                  data: [65, 65, 65, 65, 65, 65, 65],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n\n      {/* <WidgetsBrand withCharts /> */}\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Food Recomendation</CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n\n              <br />\n\n              <CCardHeader>Your Activity</CCardHeader>\n\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">S.N</CTableHeaderCell>\n                    <CTableHeaderCell>Sugar Level</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Weight</CTableHeaderCell>\n                    <CTableHeaderCell>Morning Meal</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Launch</CTableHeaderCell>\n                    <CTableHeaderCell>Dinner</CTableHeaderCell>\n                    <CTableHeaderCell>Exercise</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {userTable.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                      {item.id}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {item.sugarLevel}\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        {item.weight}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        {item.morMeal}\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                       {item.launch}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                       {item.Dinner}\n                      </CTableDataCell>\n                      <CTableDataCell>\n                       {item.exercise}\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n"],"names":["className","style","width","sm","lg","color","value","title","chart","height","data","labels","datasets","label","backgroundColor","borderColor","pointBackgroundColor","getStyle","options","plugins","legend","display","maintainAspectRatio","scales","x","grid","drawBorder","ticks","y","min","max","elements","line","borderWidth","tension","point","radius","hitRadius","hoverRadius","barPercentage","drawTicks","random","Math","floor","progressGroupExample2","icon","cilUser","cilUserFemale","progressGroupExample3","cibGoogle","percent","cibFacebook","cibTwitter","cibLinkedin","userTable","id","sugarLevel","weight","morMeal","launch","Dinner","exercise","cilCloudDownload","map","active","marginTop","hexToRgba","pointHoverBackgroundColor","fill","borderDash","drawOnChartArea","beginAtZero","maxTicksLimit","stepSize","ceil","hoverBorderWidth","xs","cols","md","item","index","thin","xl","value1","value2","size","align","hover","responsive"],"sourceRoot":""}