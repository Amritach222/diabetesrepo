{"version":3,"file":"static/js/392.74fc9bd6.chunk.js","mappings":"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","sources":["views/add details/AddDetails.js","routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebarNav.js","assets/brand/sygnet.js","_nav.js","components/AppSidebar.js","components/DocsCallout.js","components/DocsExample.js","layout/DefaultLayout.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Axios from 'axios'\n\nimport TextField from '@mui/material/TextField'\n\nimport Button from '@mui/material/Button'\nimport { ToastContainer, toast } from 'react-toastify'\nimport './adddetails.scss'\nimport adddetails_image from '../../assets/images/diabetes/adddetails.jpg'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {\n  // CButton,\n  CCardGroup,\n  CCard,\n  CCardBody,\n  CCol,\n  CContainer,\n  CForm,\n\n  CInputGroup,\n\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilWarning } from '@coreui/icons'\n// import { cilLockLocked, cilUser } from '@coreui/icons'\nimport { Link } from 'react-router-dom'\nimport register_image from '../../../src/assets/images/diabetes/register.png'\nconst AddDetails = () => {\n  //creating a state which stores registeration information in an object\n  const [displayError, setdisplayerror] = useState('')\n  const [disableForm, setdisableForm] = useState('')\n  const [disableFormTime, setdisableFormTime] = useState('')\n  const [userDetails, setuserDetails] = useState({\n    userSugar: '',\n    userMeal: '',\n    userLaunch: '',\n    userDinner: '',\n    userExercise: '',\n    healthissues: '',\n  })\n  let id = localStorage.getItem('userId')\n\n  //setting time for enabling form to open\n  let currentTime = new Date()\n  // let time =\n  //   currentTime.getHours() + ':' + currentTime.getMinutes() + ':' + currentTime.getSeconds()\n  let openingTime = Math.abs(20 - currentTime.getHours())\n\n\n  useEffect(() => {\n    Axios.put('http://localhost:3001/api/users/getuser', {\n      user_id: id,\n    })\n      .then((res) => {\n        if (res.data.success == 1) {\n          console.log('response good')\n          console.log(res.data)\n          const username = res.data.data.name\n\n          Axios.put('http://localhost:3001/api/userDetails/getsubmissionDate/', {\n            username: username,\n            todayDate: new Date().toLocaleDateString(),\n          })\n            .then((res) => {\n              //handle success\n              if (res.data.data) {\n\n                setdisableForm('disabled')\n\n\n                if (openingTime )\n                  setdisableFormTime(`Your form  opens in ${openingTime} hour`)\n                else {\n                  setdisableFormTime(`Your form  opens in less than ${openingTime} hour`)\n                }\n              } else {\n                // setdisableForm('')\n\n                if (currentTime.getHours() >= 20 && currentTime.getHours() <= 24) {\n                  setdisableForm('')\n                  setdisableFormTime(`Your form  is available only between 8 PM to 12 AM`)\n\n                } else {\n                  setdisableForm('disabled')\n\n                  // const enableForm=()=>\n                  // {\n                  //   const openingTime=`${Math.abs(9-currentTime.getHours())}:${Math.abs(59-currentTime.getMinutes())}:${Math.abs(60-currentTime.getSeconds())}`\n                  // console.log(openingTime)\n                  // console.log(time)\n                  // setdisableFormTime(`Your form  opens in ${openingTime}`);\n                  // }\n                  // setInterval(enableForm, 1000)\n\n                  if (openingTime > 1)\n                    setdisableFormTime(`Your form  opens in ${openingTime} hour`)\n                  else {\n                    setdisableFormTime(`Your form  opens in less than ${openingTime} hour`)\n                  }\n                }\n              }\n            })\n            .catch((res) => {\n              //handle error\n              console.log(res)\n            })\n        }\n      })\n      .catch((res) => {\n        console.log(res)\n      })\n  }, [])\n\n  const handleInput = (event) => {\n    const name = event.target.name\n    const value = event.target.value\n    setuserDetails({ ...userDetails, [name]: value })\n    // console.log(name, value)\n    setdisplayerror('')\n  }\n\n  //sending form data on submit click....\n  const addDetails = async (e) => {\n    e.preventDefault()\n    const { userSugar, userMeal, userLaunch, userDinner, userExercise, healthissues } = userDetails\n    let username = ''\n\n    // console.log(id)\n\n    let today = new Date().toLocaleDateString()\n    if (userMeal === '' || (userDinner === '' && userDinner === '')) {\n      setdisplayerror('Fields cannot be empty')\n    } else {\n      Axios.put('http://localhost:3001/api/users/getuser', {\n        user_id: id,\n      })\n        .then((res) => {\n          if (res.data.success == 1) {\n            // console.log(\"response good\")\n            console.log(res.data)\n            username = res.data.data.name\n\n            Axios.post('http://localhost:3001/api/userDetails', {\n              sugar_level: userSugar,\n              morning_meal: userMeal,\n              launch: userLaunch,\n              dinner: userDinner,\n              exercise_time: userExercise,\n              health_issues: healthissues,\n              today_date: today,\n              username: username,\n            })\n              .then((res) => {\n                //handle success\n                if (res.data.success == 1) {\n                  alert('Submitted Successfully')\n\n                  setdisableForm('disabled')\n\n\n                  if (openingTime > 1)\n                    setdisableFormTime(`Your form  opens in ${openingTime} hour`)\n                  else {\n                    setdisableFormTime(`Your form  opens in less than ${openingTime} hour`)\n                  }\n\n\n                } else {\n                  alert('Not Submitted')\n                }\n              })\n              .catch((res) => {\n                //handle error\n                console.log(res)\n              })\n          }\n        })\n        .catch((res) => {\n          console.log(res)\n        })\n    }\n  }\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={9}>\n            <CCardGroup\n              style={{\n                boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n              }}\n            >\n              <CCard className>\n                <CCardBody\n                  className=\"p-4\"\n                  style={{\n                    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n                  }}\n                >\n                  <CForm action=\"\">\n                    <h1>Enter Your Details Here</h1>\n                    <p className=\"text-medium-emphasis\">\n                      Daily Activites help to track your Diabetes Condition\n                    </p>\n\n                    <CInputGroup className=\"mb-4\">\n                      <TextField\n                        disabled={disableForm}\n                        style={{ width: '100%' }}\n                        name=\"userSugar\"\n                        id=\"userSugar\"\n                        autoComplete=\"off\"\n                        value={userDetails.userSugar}\n                        onChange={handleInput}\n                        label=\"Sugar Level (optional)\"\n                        type=\"number\"\n                        variant=\"standard\"\n                      />\n                    </CInputGroup>\n\n                    <CInputGroup className=\"mb-4\">\n                      <TextField\n                        disabled={disableForm}\n                        style={{ width: '100%' }}\n                        name=\"userMeal\"\n                        id=\"userMeal\"\n                        autoComplete=\"off\"\n                        value={userDetails.userMeal}\n                        onChange={handleInput}\n                        label=\"Morning Meal\"\n                        type=\"text\"\n                        variant=\"standard\"\n                      />\n                    </CInputGroup>\n\n                    <CInputGroup className=\"mb-4\">\n                      <TextField\n                        disabled={disableForm}\n                        style={{ width: '100%' }}\n                        name=\"userLaunch\"\n                        id=\"userLaunch\"\n                        autoComplete=\"off\"\n                        value={userDetails.userLaunch}\n                        onChange={handleInput}\n                        label=\"Launch\"\n                        type=\"text\"\n                        variant=\"standard\"\n                      />\n                    </CInputGroup>\n\n                    <CInputGroup className=\"mb-4\">\n                      <TextField\n                        disabled={disableForm}\n                        style={{ width: '100%' }}\n                        name=\"userDinner\"\n                        id=\"userDinner\"\n                        autoComplete=\"off\"\n                        value={userDetails.userDinner}\n                        onChange={handleInput}\n                        label=\"Dinner\"\n                        type=\"text\"\n                        variant=\"standard\"\n                      />\n                    </CInputGroup>\n\n                    <CInputGroup className=\"mb-4\">\n                      <TextField\n                        disabled={disableForm}\n                        style={{ width: '100%' }}\n                        name=\"userExercise\"\n                        id=\"userExercise\"\n                        autoComplete=\"off\"\n                        value={userDetails.userExercise}\n                        onChange={handleInput}\n                        label=\"Exercise time (optional)\"\n                        type=\"number\"\n                        variant=\"standard\"\n                      />\n                    </CInputGroup>\n\n                    <CInputGroup className=\"mb-1\">\n                      <TextField\n                        disabled={disableForm}\n                        style={{ width: '100%' }}\n                        name=\"healthissues\"\n                        id=\"outlined-multiline-static\"\n                        autoComplete=\"off\"\n                        value={userDetails.healthissues}\n                        onChange={handleInput}\n                        label=\"Any health issues (optional)\"\n                        type=\"text\"\n                        multiline\n                        rows={4}\n                        variant=\"standard\"\n                      />\n                    </CInputGroup>\n\n                    <span className=\"text-danger ms-1\">{displayError}</span>\n\n                    <CInputGroup className=\"mb-2 mt-3 align-center\">\n                      <Button\n                        disabled={disableForm}\n                        variant=\"outlined\"\n                        type=\"submit\"\n                        name=\"submit\"\n                        id=\"submit\"\n                        onClick={addDetails}\n                      >\n                        Submit\n                      </Button>\n                    </CInputGroup>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-black bg-gradient py-5 form_enabling\">\n                <b\n                style={{\n                  width:'90%',\n    textAlign:'center',\n    margin: '0 auto',\n    color: 'black',\n\n\n    padding: '5px 10px',\n\n    animationName: 'span_animation',\n    animationDuration: '0.5s',\n    animationIterationCount: 'infinite',\n\n                }}>\n                  <CIcon icon={cilWarning}\n                    /> {disableFormTime}\n                </b>\n                <CCardBody className='d-flex justify-content-center align-items-center'>\n                  <img src={register_image} alt=\"GIF\" style={{ overflow: 'hidden' , maxWidth: '100%',\n        maxHeight: '100%',\n        display: 'block',objectFit: 'cover'}} />\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n      <ToastContainer position=\"top-center\" autoClose={1000} />\n    </div>\n  )\n}\n\nexport default AddDetails\n","import React from 'react'\nimport AddDetails from './views/add details/AddDetails'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\n\n// const Charts = React.lazy(() => import('./views/charts/Charts'))\n\n// Notifications\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\nconst Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\nconst Doctor =React.lazy(()=>import('./views/doctor/Doctor'))\nconst Profile=React.lazy(()=>import('./views/profile/Profile'))\nconst Prediction=React.lazy(()=>import('./views/Prediction/Prediction'))\nconst Privacy=React.lazy(()=> import('./views/privacypolicy/privacy'))\nconst AboutUs=React.lazy(()=> import('./views/aboutus/Aboutus'))\nconst Settings = React.lazy(()=>import('./views/settings/Settings'))\n\nconst Activity=React.lazy(()=>import('./views/activities/Activity'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n\n  { path: '/addDetails', name: 'Add Details', element: AddDetails },\n  {path:'/doctor', name:'Doctor',element:Doctor},\n  {path: '/profile', name:'Profile', element:Profile},\n  {path: '/settings', name:'Setting', element:Settings},\n  {path: '/activities', name:'My Activities', element:Activity},\n  {path:'/diabetes_prediction',name:'Prediction',element:Prediction},\n  { path: '/notifications', name: 'Notifications', element: Alerts, exact: true },\n  { path: '/notifications/alerts', name: 'Alerts', element: Alerts },\n  { path: '/notifications/badges', name: 'Badges', element: Badges },\n  { path: '/notifications/modals', name: 'Modals', element: Modals },\n  { path: '/notifications/toasts', name: 'Toasts', element: Toasts },\n  { path: '/aboutus', name: 'About Us', element: AboutUs },\n  {path:'/privacyandpolicy', name:'Privacy and Policy',element:Privacy}\n]\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <a href=\"https://coreui.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n          DIABETES TRACKER\n        </a>\n        <span className=\"ms-1\">&copy; 2022 </span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by</span>\n        <a href=\"https://coreui.io/react\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Diabetes Tracker\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React, {useEffect,useState}from 'react'\nimport {useNavigate} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {\n  CAvatar,\n  CBadge, CCardImage,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle, CImage,\n} from '@coreui/react'\nimport {cilAccountLogout, cilBell, cilLockLocked, cilSettings, cilUser} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport Axios from \"axios\";\nimport avatar from '../../assets/images/avatars/5.jpg'\nconst AppHeaderDropdown = ({ updateUser }) => {\n  AppHeaderDropdown.propTypes = {\n    updateUser: PropTypes.number.isRequired,\n  }\n  const navigate = useNavigate();\n  const [file, setFile] = useState({preview:''});// This state  for set Image\n  useEffect(()=>{\n      const userId=window.localStorage.getItem('userId')\n      Axios.put('http://localhost:3001/api/users/getprofile',{id:userId})\n        .then((res)=>{\n          if(res.data.data.image){\n            const image_path=res.data.data.image\n            let path=image_path.substr(7); // Removing 'public/' from image url\n            setFile({preview:'http://localhost:3001/'+path})\n          }\n          else{\n            setFile({preview: avatar})\n          }\n        }).catch((err)=>{\n        setFile({preview: avatar})\n        console.log(\"Something went wrong\", err)\n      })\n    },[]\n  )\n  const logout=()=>{\n    window.localStorage.removeItem('userId');\n    window.localStorage.removeItem('MyUser');\n    navigate('/login')\n    window.location.reload()\n\n  }\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={file.preview} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Settings</CDropdownHeader>\n        <CDropdownItem href=\"http://localhost:3000/#/profile\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem>\n        <CDropdownItem href=\"http://localhost:3000/#/settings\">\n          <CIcon icon={cilSettings} className=\"me-2\" />\n          Settings\n        </CDropdownItem>\n        <CDropdownDivider />\n        <CDropdownItem href=\"http://localhost:3000/#/login\"   onClick={() => {\n              logout()\n            }}>\n          <CIcon\n            icon={cilAccountLogout}\n            className=\"me-2\"\n\n          />\n          Logout\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  CButton, CFormSwitch,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilMenu } from '@coreui/icons'\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\n\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          {/*<CIcon icon={logo} height={48} alt=\"Logo\" />*/}\n          <h3>DIABETES <span style={{color:'red'}}>TRACKER</span></h3>\n\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"d-flex justify-content-center align-items-center\">\n          <CNavItem>\n            <CFormSwitch size=\"xl\"  id=\"formSwitchCheckDefaultXL\"/>\n\n            {/*<CNavLink href=\"\">*/}\n            {/*  <CIcon icon={cilBell} size=\"lg\" />*/}\n            {/*</CNavLink>*/}\n\n          </CNavItem>\n          {/* <CNavItem>\n            <CNavLink>\n              <CButton color=\"secondary\">\n                <Link to=\"/login\" style={{ textDecoration: 'none', color: 'black' }}>\n                  login\n                </Link>\n              </CButton>\n            </CNavLink>\n          </CNavItem> */}\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CButton color=\"secondary\">\n                <Link to=\"/register\" style={{ textDecoration: 'none', color: 'black' }}>\n                  Register\n                </Link>\n              </CButton>\n            </CNavLink>\n          </CNavItem> */}\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown  />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","export const sygnet = [\n  '160 160',\n  `\n  <title>coreui logo</title>\n  <g>\n    <g style=\"fill:#fff;\">\n      <path d=\"M125,47.091,86,24.5743a12,12,0,0,0-12,0L35,47.091a12.0336,12.0336,0,0,0-6,10.3923v45.0334a12.0335,12.0335,0,0,0,6,10.3923l39,22.5166a11.9993,11.9993,0,0,0,12,0l39-22.5166a12.0335,12.0335,0,0,0,6-10.3923V57.4833A12.0336,12.0336,0,0,0,125,47.091Zm-2,55.4257a4,4,0,0,1-2,3.464L82,128.4974a4,4,0,0,1-4,0L39,105.9807a4,4,0,0,1-2-3.464V57.4833a4,4,0,0,1,2-3.4641L78,31.5025a4,4,0,0,1,4,0l39,22.5167a4,4,0,0,1,2,3.4641Z\"/>\n      <path d=\"M103.0216,93.0379h-2.866a4,4,0,0,0-1.9246.4935L80.95,103.0167,61,91.4981V68.5206L80.95,57.002l17.2894,9.455a4,4,0,0,0,1.9192.4905h2.8632a2,2,0,0,0,2-2V62.2357a2,2,0,0,0-1.04-1.7547L84.793,49.9854a8.0391,8.0391,0,0,0-7.8428.09L57,61.5929A8.0243,8.0243,0,0,0,53,68.5216v22.976a8,8,0,0,0,4,6.9283l19.95,11.5185a8.0422,8.0422,0,0,0,7.8433.0879l19.19-10.5311a2,2,0,0,0,1.0378-1.7534v-2.71A2,2,0,0,0,103.0216,93.0379Z\"/>\n    </g>\n  </g>\n`,\n]\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilApple,\n  cilAudioSpectrum,\n  cilBell,\n  cilCalculator,\n  cilCheck, cilDescription,\n  cilMedicalCross, cilNoteAdd,\n  cilPlus, cilSearch,\n  cilSpeedometer,\n} from '@coreui/icons'\nimport {CNavGroup, CNavItem, CNavTitle} from '@coreui/react'\nimport diabetesLogo from './assets/images/diabetes/blood-test.png'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavTitle,\n    name: 'Components',\n  },\n  {\n    component: CNavItem,\n    name: 'Add Details',\n    to: '/addDetails',\n    icon: <CIcon icon={cilNoteAdd} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'My Activities',\n    to: '/activities',\n    icon: <CIcon icon={cilDescription} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Your Doctor',\n    to: '/doctor',\n    icon: <CIcon icon={cilMedicalCross} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Predict  Your Result',\n    to: '/diabetes_prediction',\n    icon: <CIcon icon={cilSearch} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavGroup,\n    name: 'About Diabetes',\n    icon: (\n      <img\n        src={diabetesLogo}\n        alt=\"\"\n        style={{ height: '20px', margin: '0 18px 0 8px', color: 'white', filter: 'invert(100%)' }}\n      />\n    ),\n    items: [\n      {\n        component: CNavItem,\n        name: 'Causes',\n        to: '/aboutDiabetes/causes',\n      },\n      {\n        component: CNavItem,\n        name: 'Symptoms',\n        to: '/aboutDiabetes/symptoms',\n      },\n      {\n        component: CNavItem,\n        name: 'Types',\n        to: '/aboutDiabetes/types',\n      },\n      {\n        component: CNavItem,\n        name: 'Medications',\n        to: '/aboutDiabetes/medications',\n      },\n      {\n        component: CNavItem,\n        name: 'Prevention',\n        to: '/aboutDiabetes/prevention',\n      },\n      {\n        component: CNavItem,\n        name: 'About Insulin',\n        to: '/aboutDiabetes/aboutInsulin',\n      },\n    ],\n  },\n  {\n    component: CNavItem,\n    name: 'About Us',\n    to: '/aboutus',\n    icon: <CIcon icon={cilBell} customClassName=\"nav-icon\"/>\n\n    // items: [\n    //   {\n    //     component: CNavItem,\n    //     name: 'Alerts',\n    //     to: '/notifications/alerts',\n    //   },\n    //   {\n    //     component: CNavItem,\n    //     name: 'Badges',\n    //     to: '/notifications/badges',\n    //   },\n    //   {\n    //     component: CNavItem,\n    //     name: 'Modal',\n    //     to: '/notifications/modals',\n    //   },\n    //   {\n    //     component: CNavItem,\n    //     name: 'Toasts',\n    //     to: '/notifications/toasts',\n    //   },\n    // ],\n  },\n  {\n    component: CNavItem,\n    name: 'Privacy and Policy',\n    to: '/privacyandpolicy',\n\n\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport injection  from 'src/assets/brand/injection.png'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n       <img src={injection} style={{ height : \"35px\" , filter: \"invert(100%)\", marginRight:\"2px\"}} alt=\"Logo\"/>\n        <b style={{fontSize: \"20px\"}}>Diabetes Tracker</b>\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react'\n\nimport packageJson from '../../package.json'\n\nconst DocsCallout = (props) => {\n  const { content, href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      {content\n        ? content\n        : `A React ${name} component ${\n            plural ? 'have' : 'has'\n          } been created as a native React.js version\n      of Bootstrap ${name}. ${name} ${plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.`}\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  content: PropTypes.string,\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCode, cilMediaPlay } from '@coreui/icons'\n\nimport packageJson from '../../package.json'\n\nconst DocsExample = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${packageJson.config.coreui_library_short_version}/${href}`\n\n  return (\n    <div className=\"example\">\n      <CNav variant=\"tabs\">\n        <CNavItem>\n          <CNavLink href=\"#\" active>\n            <CIcon icon={cilMediaPlay} className=\"me-2\" />\n            Preview\n          </CNavLink>\n        </CNavItem>\n        <CNavItem>\n          <CNavLink href={_href} target=\"_blank\">\n            <CIcon icon={cilCode} className=\"me-2\" />\n            Code\n          </CNavLink>\n        </CNavItem>\n      </CNav>\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nDocsExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(DocsExample)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport PropTypes from 'prop-types'\n\nconst DefaultLayout = ({ updateUser }) => {\n  DefaultLayout.propTypes = {\n    updateUser: PropTypes.number.isRequired,\n  }\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader updateUser={updateUser} />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["useState","displayError","setdisplayerror","disableForm","setdisableForm","disableFormTime","setdisableFormTime","userSugar","userMeal","userLaunch","userDinner","userExercise","healthissues","userDetails","setuserDetails","id","localStorage","getItem","currentTime","Date","openingTime","Math","abs","getHours","useEffect","Axios","user_id","then","res","data","success","console","log","username","name","todayDate","toLocaleDateString","catch","handleInput","event","target","value","addDetails","e","preventDefault","today","sugar_level","morning_meal","launch","dinner","exercise_time","health_issues","today_date","alert","className","md","style","boxShadow","action","TextField","disabled","width","autoComplete","onChange","label","type","variant","multiline","rows","Button","onClick","textAlign","margin","color","padding","animationName","animationDuration","animationIterationCount","icon","cilWarning","src","register_image","alt","overflow","maxWidth","maxHeight","display","objectFit","position","autoClose","Dashboard","React","Alerts","Badges","Modals","Toasts","Doctor","Profile","Prediction","Privacy","AboutUs","path","exact","element","AddDetails","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","href","map","breadcrumb","key","AppContent","lg","Suspense","fallback","idx","to","replace","AppFooter","rel","updateUser","navigate","useNavigate","preview","file","setFile","userId","window","image","substr","avatar","err","placement","caret","size","cilUser","cilSettings","removeItem","reload","cilAccountLogout","dispatch","useDispatch","sidebarShow","useSelector","state","fluid","cilMenu","component","NavLink","AppSidebarNav","items","navLink","badge","text","navItem","item","rest","Component","navGroup","String","toggler","visible","startsWith","sygnet","CNavItem","cilSpeedometer","customClassName","CNavTitle","cilNoteAdd","cilDescription","cilMedicalCross","cilSearch","CNavGroup","diabetesLogo","height","filter","cilBell","AppSidebar","unfoldable","sidebarUnfoldable","onVisibleChange","marginRight","fontSize","navigation","DocsCallout","props","content","plural","slice","_href","packageJson","DocsExample","children","cilMediaPlay","cilCode"],"sourceRoot":""}