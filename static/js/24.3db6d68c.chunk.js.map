{"version":3,"file":"static/js/24.3db6d68c.chunk.js","mappings":"ySA6JA,UAzIc,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WACTC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,CACzCC,MAAO,GACPC,SAAU,KAFZ,eAAOC,EAAP,KAAkBC,EAAlB,KASMC,EAAc,SAACC,GACnB,IAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAC3BL,GAAa,kBAAKD,GAAN,cAAkBI,EAAOE,MAIjCC,EAAS,yCAAG,WAAOC,GAAP,8EAEhBA,EAAEC,iBACMX,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAGfW,IAAAA,KAAW,wCAAyC,CAClDZ,MAAOA,EACPC,SAAUA,IAETY,MAAK,SAACC,GAGiB,IAAnBA,EAAIC,KAAKC,SAEVC,MAAMH,EAAIC,KAAKA,MAGM,IAAnBD,EAAIC,KAAKC,UACXC,MAAMH,EAAIC,KAAKA,MACfH,IAAAA,IAAU,8CACR,CAACZ,MAAMA,IAAQa,MAAK,SAACC,GACnB,GAAGA,EAAIC,KAAKA,KAAK,CACf,IAAMG,EAAGJ,EAAIC,KAAKA,KAAKG,GACvBC,QAAQC,IAAI,OAAQN,EAAIC,KAAKA,MAC3BM,aAAaC,QAAQ,SAASJ,QAGhCC,QAAQC,IAAI,wBAEdG,OAAM,SAACC,GACTL,QAAQC,IAAI,eAAgBI,MAE9B5B,EAAWM,GACXL,EAAS,kBAIZ0B,OAAM,SAACT,GAENK,QAAQC,IAAIN,MAxCA,2CAAH,sDA4Cf,OAEE,gBAAKW,UAAU,yDAAf,UACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAMA,UAAU,yBAAhB,UACE,SAAC,KAAD,CAAMC,GAAI,EAAV,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOD,UAAU,MAAjB,UACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,mCACA,cAAGA,UAAU,uBAAb,sCACA,UAAC,KAAD,CAAaA,UAAU,OAAvB,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAOE,KAAMC,EAAAA,OAEf,SAAC,KAAD,CACEtB,KAAK,QACLuB,YAAY,QACZC,aAAa,MACbtB,MAAON,EAAUF,MACjB+B,SAAU3B,QAGd,UAAC,KAAD,CAAaqB,UAAU,OAAvB,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAOE,KAAMK,EAAAA,OAEf,SAAC,KAAD,CACE1B,KAAK,WACL2B,KAAK,WACLJ,YAAY,WACZC,aAAa,MACbtB,MAAON,EAAUD,SACjB8B,SAAU3B,QAGd,UAAC,KAAD,YACE,SAAC,KAAD,CAAM8B,GAAI,EAAV,UACE,SAAC,KAAD,CAASC,MAAM,UAAUV,UAAU,OAAOW,QAAS3B,EAAnD,sBAKF,SAAC,KAAD,CAAMyB,GAAI,EAAGT,UAAU,aAAvB,UACE,SAAC,KAAD,CAASU,MAAM,OAAOV,UAAU,OAAhC,2CAQV,SAAC,KAAD,CAAOA,UAAU,6BAA6BY,MAAO,CAAEC,MAAO,OAA9D,UACE,SAAC,KAAD,CAAWb,UAAU,cAArB,UACE,4BACE,qCACA,cAAGY,MAAO,CAACE,SAAS,OAAOC,KAAK,QAAhC,2EAGA,SAAC,KAAD,CAAMC,GAAG,YAAT,UACE,SAAC,KAAD,CAASN,MAAM,UAAUV,UAAU,OAAOiB,QAAM,EAACC,UAAW,EAAGN,MAAO,CAACO,OAAO,oBAAqBC,aAAa,QAAhH,iD,sDC/If,IAAMb,EAAgB,CAAC,UAAU,+Q,sDCAjC,IAAMJ,EAAU,CAAC,UAAU","sources":["views/pages/login/Login.js","../node_modules/@coreui/icons/js/free/cil-lock-locked.js","../node_modules/@coreui/icons/js/free/cil-user.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link ,useNavigate} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport Axios from 'axios'\n\nconst Login = ({ updateUser }) => {\n  const navigate = useNavigate();\n  const [userLogin, setuserLogin] = useState({\n    email: '',\n    password: '',\n  })\n\n  Login.propTypes = {\n    updateUser: PropTypes.object.isRequired,\n  }\n\n  const handleInput = (event) => {\n    const name = event.target.name\n    const value = event.target.value\n    setuserLogin({ ...userLogin, [name]: value })\n    // console.log(name, value)\n  }\n\n  const loginUser = async (e) => {\n    // <Link to='/' />\n    e.preventDefault()\n    const { email, password } = userLogin\n    // console.log(username)\n\n    Axios.post('http://localhost:3001/api/users/login', {\n      email: email,\n      password: password,\n    })\n      .then((res) => {\n        //handle error\n        // console.log(res)\n        if(res.data.success===0)\n        {\n          alert(res.data.data)\n        }\n        //handle success\n        if (res.data.success===1) {\n          alert(res.data.data);\n          Axios.put('http://localhost:3001/api/users/userbyemail',\n            {email:email}).then((res)=>{\n              if(res.data.data){\n                const id=res.data.data.id;\n                console.log(\"data\", res.data.data)\n                  localStorage.setItem('userId',id);\n              }\n              else{\n                console.log(\"data Not received\")\n              }\n          }). catch((error)=>{\n            console.log(\"Server error\", error)\n          })\n          updateUser(userLogin);\n          navigate('/dashboard')\n\n        }\n      })\n      .catch((res) => {\n        //handle error\n        console.log(res)\n      })\n  }\n\n  return (\n\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        autoComplete=\"off\"\n                        value={userLogin.email}\n                        onChange={handleInput}\n                      />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        name=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"off\"\n                        value={userLogin.password}\n                        onChange={handleInput}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton color=\"primary\" className=\"px-4\" onClick={loginUser}>\n                          Login\n                        </CButton>\n                      </CCol>\n\n                      <CCol xs={6} className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>Sign up</h2>\n                    <p style={{fontSize:\"20px\",font:\"bold\"}}>\n                    I didnot choose Diabetes but i can choose how i react to it.\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1} style={{border:\"0.5px solid white\", borderRadius:\"10px\"}}>\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\nexport default Login\n","export const cilLockLocked = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"]","export const cilUser = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"]"],"names":["updateUser","navigate","useNavigate","useState","email","password","userLogin","setuserLogin","handleInput","event","name","target","value","loginUser","e","preventDefault","Axios","then","res","data","success","alert","id","console","log","localStorage","setItem","catch","error","className","md","icon","cilUser","placeholder","autoComplete","onChange","cilLockLocked","type","xs","color","onClick","style","width","fontSize","font","to","active","tabIndex","border","borderRadius"],"sourceRoot":""}