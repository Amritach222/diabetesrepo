{"version":3,"file":"static/js/868.87267fac.chunk.js","mappings":"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","sources":["components/PDF/GeneratePDF.js","views/activities/Activity.js"],"sourcesContent":["import React  from \"react\";\nimport { Link } from \"react-router-dom\";\n// Create Document Component\n// eslint-disable-next-line react/prop-types\nconst GeneratePDF=({preview,name})=> {\n  return (\n    <div className=\"container_preview\">\n      {/* eslint-disable-next-line react/prop-types */}\n      {preview.length === 0 ? (\n        \"You currently have no data created\"\n      ) : (\n            <div>\n            <p>Name: {name}</p>\n        <table className=\"table\" style={{fontSize:'12px'}}>\n          <thead style={{background:'#2980ba'}}>\n          <tr>\n            <th scope=\"col\" className=\"text-white\">S.N</th>\n            <th scope=\"col\" className=\"text-white\">Sugar Level</th>\n            <th scope=\"col\" className=\"text-white\">Breakfast</th>\n            <th scope=\"col\" className=\"text-white\">Lunch</th>\n            <th scope=\"col\" className=\"text-white\">Dinner</th>\n            <th scope=\"col\" className=\"text-white\">Exercise Time</th>\n            <th scope=\"col\" className=\"text-white\">Date</th>\n          </tr>\n          </thead>\n          <tbody>\n          {/* eslint-disable-next-line react/prop-types */}\n          {preview.map((item,index) => (\n            <tr key={item.id}>\n              <td>{index+1}</td>\n              <td>{item.sugar_level} mg/dL</td>\n              <td>{item.morning_meal}</td>\n              <td>{item.launch}</td>\n              <td>{item.dinner}</td>\n              <td>{item.exercise_time} minutes</td>\n              <td >\n                {item.date}\n              </td>\n\n            </tr>\n          ))}\n          </tbody>\n        </table>\n            </div>\n      )}\n    </div>\n  );\n}\nexport default GeneratePDF;\n","import React, {useEffect, useState,PureComponent} from 'react'\nimport {\n  CButton,\n  CCard, CCardBody, CForm, CFormInput,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow\n} from \"@coreui/react\";\nimport './activity.scss'\nimport CIcon from \"@coreui/icons-react\";\nimport {cilCloudDownload, cilSettings} from \"@coreui/icons\";\nimport Axios from \"axios\";\nimport jsPDF from 'jspdf'\nimport GeneratePDF from '../../components/PDF/GeneratePDF'\nimport 'jspdf-autotable'\nimport * as PropTypes from \"prop-types\";\n\nfunction CDatePicker(props) {\n  return null;\n}\n\nCDatePicker.propTypes = {locale: PropTypes.string};\nconst Activity= ()=>{\n  const [userTable,setUserTable]=useState([]);\n  const [preview,setPreview]=useState(false)\n  const [name, setName]=useState()\n  useEffect(()=>{\n    const userId= localStorage.getItem(\"userId\")\n      Axios.put('http://localhost:3001/api/users/getUserdetails',{\n        id:userId\n      }).then((res)=>{\n        if(res.data.data){\n          const username=res.data.data[0].name;\n          const fullname=res.data.data[0].fullname;\n          setName(fullname)\n          Axios.put('http://localhost:3001/api/userDetails/getuseractivity/',{\n            username:username\n          }).then((res)=>{\n            if(res.data.data){\n              setUserTable(res.data.data)\n            }\n          }).catch((err)=>{\n            console.log(\"Error occured in activity aslling :\",err)\n          })\n        }\n      }).catch((err)=>{\n        console.log(err)\n      })\n  },[])\n  // function for generating pdf\n  const generatePDF=(data)=>{\n    // intialize jsPDF\n      var doc=new jsPDF();\n      // Setting font\n    // define the columns we want and their titles\n    const tableColumn = [\"S.N\", \"Sugar Level\", \"Breakfast\", \"Lunch\", \"Dinner\",\"Exercise Time\", \"Date\"];\n    // define an empty array of rows\n    const tableRows = [];\n    // for each ticket pass all its data into an array\n    data.map((item,index)=>{\n      const mealData=[\n        index+1,\n        item.sugar_level+\" mg/dL\",\n        item.morning_meal,\n        item.launch,\n        item.dinner,\n        item.exercise_time+\" minutes\",\n        item.date\n      ];\n      // push each item to the row\n      tableRows.push(mealData)\n    })\n    doc.setFont('courier');\n    doc.text(15,20,'Daily Activities of '+name);\n    // startY is basically margin-top\n    doc.autoTable(tableColumn, tableRows, { startY: 25 });\n    const date = Date().split(\" \");\n    // we use a date string to generate our filename.\n    const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\n    // we define the name of our PDF file.\n    doc.save(`report_${dateStr}.pdf`);\n  }\n  const previewReport =()=>{\n    setPreview(!preview)\n  }\n  const handleSearch=(e)=>{\n   const userData= userTable.filter((item)=> item.date.includes(e.target.value))\n    setUserTable(userData)\n  }\n  return(\n    <div className=\"activities\">\n      <div className=\"button_class mb-2\">\n        <CButton className=\"float-right\" onClick={()=>{previewReport()}} color=\"dark\" variant=\"outline\"><CIcon icon={cilSettings} /> Generate Report</CButton>\n      </div>\n      <div className={!preview?'d-none':''}>\n        <div className=\"button_class mb-2 float-end me-3\">\n          <CButton className=\"\"  color=\"info\" variant=\"outline\"><CIcon icon={cilCloudDownload} /> Download Report</CButton>\n        </div>\n      <GeneratePDF preview={userTable}  name={name} />\n      </div>\n      <CCard className={preview?'d-none':'mb-4'}>\n        <CCardBody>\n          <div className=\"search_container\"  >\n          <CForm className=\"d-flex\" >\n          <CFormInput style={{outline:'none',width:'180px'}} onChange={(e)=>{handleSearch(e)}} type=\"date\"  id=\"exampleFormControlInput1\" />\n          </CForm>\n          </div>\n      <CTable align=\"middle\" className=\"mb-0 border mt-2\" hover responsive style={{fontSize:'12px'}}>\n        <CTableHead color=\"light\">\n          <CTableRow >\n            <CTableHeaderCell className=\"text-center\">S.N</CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\">Sugar Level</CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\">Breakfast</CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\">Lunch</CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\">Dinner</CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\">Exercise Time</CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\">Date</CTableHeaderCell>\n          </CTableRow>\n        </CTableHead>\n        <CTableBody>\n          {\n            userTable.map((item, index) => (\n              <CTableRow v-for=\"item in tableItems\" key={index}>\n                <CTableDataCell className=\"text-center\">{index+1}</CTableDataCell>\n                <CTableDataCell className=\"text-center\" >{item.sugar_level} mg/dL</CTableDataCell>\n                <CTableDataCell className=\"text-center\">{item.morning_meal}</CTableDataCell>\n                <CTableDataCell className=\"text-center\">{item.launch}</CTableDataCell>\n                <CTableDataCell className=\"text-center\">{item.dinner}</CTableDataCell>\n                <CTableDataCell className=\"text-center\">{item.exercise_time} minutes</CTableDataCell>\n                <CTableDataCell className=\"text-center text-primary\" >{item.date}</CTableDataCell>\n                <CTableDataCell>\n                </CTableDataCell>\n              </CTableRow>\n            ))}\n        </CTableBody>\n      </CTable>\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\nexport default  Activity\n"],"names":["preview","name","className","length","style","fontSize","background","scope","map","item","index","sugar_level","morning_meal","launch","dinner","exercise_time","date","id","PropTypes","useState","userTable","setUserTable","setPreview","setName","useEffect","userId","localStorage","getItem","Axios","then","res","data","username","fullname","catch","err","console","log","onClick","color","variant","icon","cilSettings","cilCloudDownload","outline","width","onChange","e","userData","filter","includes","target","value","handleSearch","type","align","hover","responsive"],"sourceRoot":""}